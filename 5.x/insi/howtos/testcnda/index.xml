<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevBox-Santé – Conformité CNDA</title>
    <link>https://doc.devbox-sante.fr/5.x/insi/howtos/testcnda/</link>
    <description>Recent content in Conformité CNDA on DevBox-Santé</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://doc.devbox-sante.fr/5.x/insi/howtos/testcnda/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>5.x: Déclarations</title>
      <link>https://doc.devbox-sante.fr/5.x/insi/howtos/testcnda/declarations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://doc.devbox-sante.fr/5.x/insi/howtos/testcnda/declarations/</guid>
      <description>
        
        
        &lt;h3 id=&#34;test-102&#34;&gt;Test 1.02&lt;/h3&gt;
&lt;p&gt;Le connecteur devbox-santé-insi est conforme au niveau 1 de sécurité. En effet, avant tout appel au TéléService INSi, la carte vitale est lue et une nouvelle assertion est générée.
Donc quelque soit le délai d&amp;rsquo;attente, la recherche se fera sur l&amp;rsquo;individu séléctionné de la carte vitale insérée.&lt;/p&gt;
&lt;p&gt;Le cas 2 n&amp;rsquo;est pas reproductible dans notre cas, car la requête est transmise directement après la sélection du bénéficiaire.&lt;/p&gt;
&lt;p&gt;Deux possibilités de sélectionner le bénéficiaire :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la première par l&amp;rsquo;utilisation d&amp;rsquo;une popup du choix du bénéficiaire (SELECT_INDIVIDU.png).&lt;/li&gt;
&lt;li&gt;le programme appelant connaît le bénéficiaire par un appel préalable aux apis vitales, le numéro de série de la carte vitale et l&amp;rsquo;index de l&amp;rsquo;invidu sont donc passés en paramètre (Appel_avec_numSerie_index_individu.png).
Ces paramètres permettent de sélectionner les informations lues da la carte vitale avant la génération de l&amp;rsquo;assertion.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;test-103&#34;&gt;Test 1.03&lt;/h3&gt;
&lt;p&gt;Le connecteur devbox-santé-insi est conforme au niveau 1 de sécurité. En effet, avant tout appel au TéléService INSi, la carte vitale est lue et une nouvelle assertion est générée.
Donc si la carte dans le lecteur a été changé, la sélection de l&amp;rsquo;individu bénéficiaire est demandé à l&amp;rsquo;utilisateur et la recherche se fera sur l&amp;rsquo;individu séléctionné de la carte vitale insérée. 
Il n&amp;rsquo;y a donc pas d&amp;rsquo;erreur mais une invitation à choisir l&amp;rsquo;individu sur la carte.&lt;/p&gt;
&lt;p&gt;Toutefois, il est laissé à l&amp;rsquo;intégrateur, dans le cas où la carte vitale a déjà été lue en amont, la possibilité de spécifier le numéro de série de la cartevitale ainsi que l&amp;rsquo;index du bénéficiaire. 
Donc dans ce cas, le connecteur devbox-santé-insi vérifie que ces deux paramètres correspondent aux informations lues sur la carte vitale avant de générer l&amp;rsquo;assertion. Cela permet de ne pas redemander à l&amp;rsquo;utilisateur de sélectionner le bénificiaire.&lt;/p&gt;
&lt;p&gt;La vérification retourne une erreur dans le cas où les paramètres spécifiés par l&amp;rsquo;appelant ne correspondent pas :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fr.devboxsante.insi.client.INSiException: La numéro de série de la carte ne correspond pas.
	at fr.devboxsante.insi.client.INSiClientImpl.ins1RechercheAvecVitale(INSiClientImpl.java:62) ~[insi-impl-1.0-SNAPSHOT.jar:1.0-SNAPSHOT]
	at fr.devboxsante.insi.proxy.INSiProxy.ins1RechercheAvecVitale(INSiProxy.java:32) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;test-107-&#34;&gt;Test 1.07 :&lt;/h3&gt;
&lt;p&gt;Configuration de insi-api-proxy-rest de manière à injecter en réponse le fichier REP_CR01.xml. Cette configuration est possible seulement si le proxy-rest est lancé avec le profil CNDA activé.
Cette configuration est accessible par un endpoint REST supplémentaire&lt;/p&gt;
&lt;p&gt;Cas 1 : À la réception de l&amp;rsquo;erreur du téléservice de test est injecté dans le proxy la réponse du fichier REP_CR01.xml et est retourné en réponse (Test1.07-réponse_lionel_léonard_damien.png)&lt;/p&gt;
&lt;p&gt;Cas 2 :À la réception de l&amp;rsquo;erreur du téléservice de test est injecté dans le proxy la réponse du fichier REP_CR01.xml et comme un prénom usuel différent est trouvé sur la carte, 
l&amp;rsquo;insi-api-rest-proxy relance une recherche avec le nom usuel pour nom de naissance (REQUETE_LEONARD_2_LPS.xml)&lt;/p&gt;
&lt;p&gt;Cas 3: Idem que 1 (Test1.07-réponse_lionel_léonard_damien.png)&lt;/p&gt;
&lt;p&gt;Remarque : toutes les réponses données dans le répertoire sont les réponses d&amp;rsquo;origine du téléservice.&lt;/p&gt;
&lt;h3 id=&#34;test-201&#34;&gt;Test 2.01&lt;/h3&gt;
&lt;p&gt;Le connecteur devbox-santé-insi est conforme au niveau 1 de sécurité pour l&amp;rsquo;assertion PS. En effet, avant tout appel au TéléService INSi, la carte CPS est accédé afin de vérifier sa présence, 
si une session pkcs11 est ouverte, cette dernière est utilisée pour générer l&amp;rsquo;assertion. Si cette session n&amp;rsquo;est pas ouverte, trois possibilité :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la carte n&amp;rsquo;est pas présente [NO_CARD]&lt;/li&gt;
&lt;li&gt;le code pin n&amp;rsquo;est pas saisie [NO_PIN]&lt;/li&gt;
&lt;li&gt;la carte a été changée. [NO_PIN]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dans tous les cas un message approprié est affiché à l&amp;rsquo;utilisateur pour qu&amp;rsquo;il puisse faire les actions nécessaires.&lt;/p&gt;
&lt;h3 id=&#34;test-202&#34;&gt;Test 2.02&lt;/h3&gt;
&lt;p&gt;Le connecteur devbox-santé-insi est conforme au niveau 1 de sécurité pour l&amp;rsquo;assertion PS. En effet, avant tout appel au TéléService INSi, la carte CPS est accédé afin de vérifier sa présence, 
si une session pkcs11 est ouverte, cette dernière est utilisée pour générer l&amp;rsquo;assertion. 
Dans le cas où plusieurs structures d&amp;rsquo;activité sont trouvées, il est demandé à l&amp;rsquo;utilisateur de choisir.&lt;/p&gt;
&lt;p&gt;Le secteur d&amp;rsquo;activité et l&amp;rsquo;identification de facturation sera paramétrable par l&amp;rsquo;intégrateur. Le code profession sera renseigné pour une CPS/CPF médecin.
Il ne sera pas pour une CPE ou les CPS non médecin qui n&amp;rsquo;ont pas le champ specOrdRpps renseigné sur la carte.&lt;/p&gt;
&lt;h3 id=&#34;test-203&#34;&gt;Test 2.03&lt;/h3&gt;
&lt;p&gt;Les régles de formattage concernant les différents champs sont appliqués avant envoi de la requête vers le téléservice INSi.Le prénom saisie est Une fois ces transformations effectuées une expression régulière vérifie qu&amp;rsquo;il ne subsiste pas des caractères interdits.&lt;/p&gt;
&lt;p&gt;Dans le connecteur devbox-sante-insi a été mis en place le framework javax.validation afin d&amp;rsquo;éviter la non saisie des champs obligatoires, et de vérifier certains formats de champs. Exemple :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     * EF_INS10_01
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     * Nom de naissance
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@NotNull&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;nomNaissance&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Size&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;max&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Ce code doit être issu du Code Officiel Géographique (COG) de l’INSEE.\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Il ne s’agit pas du code postal de la commune de naissance du patient.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lieuNaissance&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si une erreur est remonté par le téléservice, cette erreur génére une exception dans le connecteur devbox-sante-insi et est remonté à l&amp;rsquo;intégrateur.&lt;/p&gt;
&lt;h4 id=&#34;cas-3&#34;&gt;Cas 3&lt;/h4&gt;
&lt;p&gt;Une tentative d&amp;rsquo;envoi avec les paramètre du cas 3, déclenchera tout d&amp;rsquo;abord une exception :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fr.devboxsante.insi.client.INSiException: D’ÆION contient des caractères interdits
	at fr.devboxsante.insi.client.INSiRequeteMappers.mapNom(INSiRequeteMappers.java:169) ~[insi-impl-1.0-SNAPSHOT.jar:1.0-SNAPSHOT]
	at fr.devboxsante.insi.client.INSiRequeteMappers.lambda$from$0(INSiRequeteMappers.java:82) ~[insi-impl-1.0-SNAPSHOT.jar:1.0-SNAPSHOT]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[na:na]
 	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1654) ~[na:na]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Une fois le nom naissance modifié en &amp;ldquo;D AEION&amp;rdquo;, une nouvelle tentative déclenchera une nouvelle exception :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fr.devboxsante.insi.client.INSiException: CŒUR contient des caractères interdits
	at fr.devboxsante.insi.client.INSiRequeteMappers.mapNom(INSiRequeteMappers.java:169) ~[insi-impl-1.0-SNAPSHOT.jar:1.0-SNAPSHOT]
	at fr.devboxsante.insi.client.INSiRequeteMappers.lambda$from$0(INSiRequeteMappers.java:83) ~[insi-impl-1.0-SNAPSHOT.jar:1.0-SNAPSHOT]
    at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1654) ~[na:na]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Une fois le prénom modifié en &amp;ldquo;Coeur&amp;rdquo; , une nouvelle tentative  déclenchera une exception :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fr.devboxsante.insi.client.INSiException: Mauvais format du lieu de naissance 2B020
	at fr.devboxsante.insi.client.INSiRequeteMappers.checkLieuNaissance(INSiRequeteMappers.java:228) ~[insi-impl-1.0-SNAPSHOT.jar:1.0-SNAPSHOT]
	at fr.devboxsante.insi.client.INSiRequeteMappers.mapLieuNaissance(INSiRequeteMappers.java:222) ~[insi-impl-1.0-SNAPSHOT.jar:1.0-SNAPSHOT]
	at fr.devboxsante.insi.client.INSiRequeteMappers.lambda$from$0(INSiRequeteMappers.java:80) ~[insi-impl-1.0-SNAPSHOT.jar:1.0-SNAPSHOT]
    at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[na:na]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;test-207&#34;&gt;Test 2.07&lt;/h3&gt;
&lt;p&gt;Une difficulté peut apparaître pour ce test où l&amp;rsquo;on vous demande de faire des appels successifs en passant une liste de prénoms dans la requête. En injectant, le fichier &lt;code&gt;REP_CR01.xml&lt;/code&gt; vous aurez toujours la même réponse déclenchée, c&amp;rsquo;est à dire celle du fichier. Il vous faut donc manuellement lancer le premier appel avec le fichier injecté, faire un clean de l&amp;rsquo;injection et poursuivre les appels.&lt;/p&gt;
&lt;h3 id=&#34;test301&#34;&gt;Test3.01&lt;/h3&gt;
&lt;p&gt;Comme pour le test 2.01&lt;/p&gt;
&lt;p&gt;Le connecteur devbox-santé-insi est conforme au niveau 1 de sécurité pour l&amp;rsquo;assertion PS. En effet, avant tout appel au TéléService INSi, la carte CPS est accédé afin de vérifier sa présence, 
si une session pkcs11 est ouverte, cette dernière est utilisée pour générer l&amp;rsquo;assertion. Si cette session n&amp;rsquo;est pas ouverte, trois possibilité :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la carte n&amp;rsquo;est pas présente [NO_CARD]&lt;/li&gt;
&lt;li&gt;le code pin n&amp;rsquo;est pas saisie [NO_PIN]&lt;/li&gt;
&lt;li&gt;la carte a été changée. [NO_PIN]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dans tous les cas un message approprié est affiché à l&amp;rsquo;utilisateur pour qu&amp;rsquo;il puisse faire les actions nécessaires.&lt;/p&gt;
&lt;h3 id=&#34;test302&#34;&gt;Test3.02:&lt;/h3&gt;
&lt;p&gt;Comme pour le Test2.02&lt;/p&gt;
&lt;p&gt;Le connecteur devbox-santé-insi est conforme au niveau 1 de sécurité pour l&amp;rsquo;assertion PS. En effet, avant tout appel au TéléService INSi, la carte CPS est accédé afin de vérifier sa présence, 
si une session pkcs11 est ouverte, cette dernière est utilisée pour générer l&amp;rsquo;assertion. 
Dans le cas où plusieurs structures d&amp;rsquo;activité sont trouvées, il est demandé à l&amp;rsquo;utilisateur de choisir.&lt;/p&gt;
&lt;p&gt;Le secteur d&amp;rsquo;activité et l&amp;rsquo;identification de facturation sera celui de la structure sélectionnée. Le code profession sera renseigné pour une CPS/CPF médecin.
Il ne le sera pas pour une CPE ou les CPS non médecin qui n&amp;rsquo;ont pas le champ specOrdRpps renseigné sur la carte.&lt;/p&gt;
&lt;h3 id=&#34;test-303&#34;&gt;Test 3.03&lt;/h3&gt;
&lt;p&gt;Le prénom saisie est transformé(normalisé) afin de supprimer tous les accents et mis en majuscule. Une fois ces transformations effectuées une expression régulière vérifie qu&amp;rsquo;il ne subsiste pas des caractères interdits.&lt;/p&gt;
&lt;h3 id=&#34;test-304&#34;&gt;Test 3.04&lt;/h3&gt;
&lt;p&gt;Utilisation de javax.validation p ur vérifier les champs obligatoires, les champs optionnels peuvent ne pas être renseigné et n&amp;rsquo;empêche pas l&amp;rsquo;appel au téléservice.&lt;/p&gt;
&lt;h3 id=&#34;test-305&#34;&gt;Test 3.05&lt;/h3&gt;
&lt;p&gt;Pour les cas 1 et 2 la réponse retournée au client est l&amp;rsquo;erreur générée par le message Soap. Il n&amp;rsquo;est pas possible d&amp;rsquo;injecter la réponse TEST_2.03_cas1.xml ou encore TEST_2.05.xml car les formats des réponses soaps 
entre les deux téléservices (WS_INS2 et WS_INS3) sont différents.&lt;/p&gt;
&lt;h3 id=&#34;test-401&#34;&gt;Test 4.01&lt;/h3&gt;
&lt;p&gt;Le connecteur devbox-santé-insi est conforme au niveau 1 de sécurité pour l&amp;rsquo;assertion PS. En effet, avant tout appel au TéléService INSi, la carte CPS est accédé afin de vérifier sa présence, 
si une session pkcs11 est ouverte, cette dernière est utilisée pour générer l&amp;rsquo;assertion. Si cette session n&amp;rsquo;est pas ouverte, trois possibilités :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la carte n&amp;rsquo;est pas présente [NO_CARD]&lt;/li&gt;
&lt;li&gt;le code pin n&amp;rsquo;est pas saisie [NO_PIN]&lt;/li&gt;
&lt;li&gt;la carte a été changée. [NO_PIN]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dans tous les cas un message approprié est affiché à l&amp;rsquo;utilisateur pour qu&amp;rsquo;il puisse faire les actions nécessaires.&lt;/p&gt;
&lt;h3 id=&#34;test-402&#34;&gt;Test 4.02&lt;/h3&gt;
&lt;p&gt;Le connecteur devbox-santé-insi est conforme au niveau 1 de sécurité pour l&amp;rsquo;assertion PS. En effet, avant tout appel au TéléService INSi, la carte CPS est accédé afin de vérifier sa présence,  si une session pkcs11 est ouverte, cette dernière est utilisée pour générer l&amp;rsquo;assertion.  Dans le cas où plusieurs structures d&amp;rsquo;activité sont trouvées, il est demandé à l&amp;rsquo;utilisateur de choisir.  Le secteur d&amp;rsquo;activité et l&amp;rsquo;identification de facturation sera celui de la structure sélectionnée. 
Le code profession sera renseigné pour une CPS/CPF médecin. 
Il ne sera pas pour une CPE ou les CPS non médecin qui n&amp;rsquo;ont pas le champ specOrdRpps renseigné sur la carte.
L&amp;rsquo;identifiant de facturation sera celui associé de la structure d&amp;rsquo;activité choisie sur la carte CPS.&lt;/p&gt;
&lt;h3 id=&#34;test-403&#34;&gt;Test 4.03&lt;/h3&gt;
&lt;p&gt;Les formats et contrôles de chaque requête unitaire pour un lot sont identiques à celles pour une vérification unitaire qui sont :&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Le prénom saisie est transformé(normalisé) afin de supprimer tous les accents et mis en majuscule. Une fois ces transformations effectuées une expression régulière vérifie qu&amp;rsquo;il ne subsiste pas des caractères interdits.&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;test-405-&#34;&gt;Test 4.05 :&lt;/h3&gt;
&lt;p&gt;Une fois le dépôt effectuée et obtenue la réponse du téléservice, la devbox-santé INSi convertit le délai donné en secondes d&amp;rsquo;attente.
Nous préférons laisser le choix à l&amp;rsquo;intégrateur de notre solution de la manière leur application attend avant de récupérer le résultat (appel non bloquant privilégié). 
Toutefois, nous proposons un service qui réalise l&amp;rsquo;appel du dépôt et essaye de récupérer le résultat après chaque nouveau délais retourné par le téléservice INSi (appel bloquant).&lt;/p&gt;
&lt;p&gt;Trace d&amp;rsquo;exécution mettant en œuvre l&amp;rsquo;injection du CR_02 :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2021-09-17 11:44:09.553 DEBUG 32560 --- [           main] f.d.insi.client.INSiClientImpl           : Délai d&amp;#39;attente pour la réponse : 60 secondes.
2021-09-17 11:45:22.084 DEBUG 32560 --- [           main] f.d.insi.client.INSiClientImpl           : Nouveau délai d&amp;#39;attente pour la réponse : 180 secondes.
2021-09-17 11:48:24.913 DEBUG 32560 --- [           main] f.d.insi.client.INSiClientImpl           : Nouveau délai d&amp;#39;attente pour la réponse : 180 secondes.
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;test-406&#34;&gt;Test 4.06&lt;/h3&gt;
&lt;p&gt;Dans la Devbox-santé INSi , le paramétrage des tailles de lot est initialisé de la manière suivante :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${devbox-sante.insi.lot.minSize:1}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lotMinSize&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${devbox-sante.insi.lot.maxSize:100}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lotMaxSize&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il est possible de modifier ce paramétrage au travers d&amp;rsquo;un fichier de configuration.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevBox-Santé – Authentifications</title>
    <link>/docs/dmp/authentifications/</link>
    <description>Recent content in Authentifications on DevBox-Santé</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/dmp/authentifications/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Authentification Indirecte (via certificat serveur)</title>
      <link>/docs/dmp/authentifications/indirecte/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/dmp/authentifications/indirecte/</guid>
      <description>
        
        
        &lt;p&gt;Il s&amp;rsquo;agit de l&amp;rsquo;authentification par certificat serveur provenant de l&amp;rsquo;IGC Santé (Infrastructure de gestion de clés) qui est délivré aux différents établissements de santé.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Une documentation pour obtenir des certificats serveurs se trouve &lt;a href=&#34;/docs/dmp/howtos/gestioncertificat/&#34;&gt;ici&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ce mode d&amp;rsquo;authentification ne permet que l&amp;rsquo;alimentation de documents dans le DMP et pas la consultation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description scénario&lt;/strong&gt; : L&amp;rsquo;intégrateur héberge le Proxy DevBox-santé dans son environnement, et l&amp;rsquo;intégre comme une passerelle vers le DMP.&lt;/p&gt;
&lt;h4 id=&#34;version-rest&#34;&gt;Version REST&lt;/h4&gt;
&lt;h5 id=&#34;diagramme-de-composants&#34;&gt;Diagramme de composants&lt;/h5&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-plantuml&#34; data-lang=&#34;plantuml&#34;&gt;!include https://bitbucket.org/devbox-sante/plantuml/raw/3/themes/theme-devbox-sante.puml

[FrontEnd intégrateur] as frontend

node &amp;quot;Environnement intégrateur&amp;quot; {
   [BackEnd intégrateur] as backend
    package &amp;quot;DevBox-Santé Proxy REST&amp;quot;  DEVBOX_COLOR {
        package &amp;quot;DevBox-sante DMP&amp;quot; as dmpFacade DMP_COLOR {
            [P12Manager] as P12Manager DMP_COLOR
        }
    }
}
cloud &amp;quot;**DMP**&amp;quot; as DMP

frontend -down-&amp;gt; backend
backend -right-&amp;gt; dmpFacade: REST
dmpFacade -down-&amp;gt; DMP : SOAP

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;version-embedded&#34;&gt;Version Embedded&lt;/h4&gt;
&lt;h5 id=&#34;diagramme-de-composants-1&#34;&gt;Diagramme de composants&lt;/h5&gt;
&lt;p&gt;L&amp;rsquo;architecture du mode embedded peut être représentée par ce schéma :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-plantuml&#34; data-lang=&#34;plantuml&#34;&gt;!include https://bitbucket.org/devbox-sante/plantuml/raw/3/themes/theme-devbox-sante.puml

[FrontEnd intégrateur] as frontend

node &amp;quot;Environnement intégrateur&amp;quot; {
   component &amp;quot;BackEnd intégrateur&amp;quot; as backend {
        component &amp;quot;DevBox-Santé DMP&amp;quot; as DMPC_API  DMP_COLOR {
            [P12Manager] as P12Manager DMP_COLOR
        }
    }
}
cloud &amp;quot;**DMP**&amp;quot; as DMP

frontend -down-&amp;gt; backend
DMPC_API -d-&amp;gt; DMP : SOAP XDS / CDA
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Authentification Directe (via carte CPx)</title>
      <link>/docs/dmp/authentifications/directe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/dmp/authentifications/directe/</guid>
      <description>
        
        
        &lt;p&gt;Ce mode d&amp;rsquo;authentification nécessite l&amp;rsquo;installation sur le poste client d&amp;rsquo;un lecteur de carte CPS ainsi que le composant DevBox-santé. Le professionnel de santé doit posséder une carte CPS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scénario possible&lt;/strong&gt; : Le frontend/client lourd s&amp;rsquo;exécutant sur le poste client de l&amp;rsquo;utilisateur accède au DMP grâce à la DevBox-Santé DMP installé sur le poste client.&lt;/p&gt;
&lt;h4 id=&#34;version-rest&#34;&gt;Version REST&lt;/h4&gt;
&lt;h5 id=&#34;diagramme-de-composants&#34;&gt;Diagramme de composants&lt;/h5&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-plantuml&#34; data-lang=&#34;plantuml&#34;&gt;!include https://bitbucket.org/devbox-sante/plantuml/raw/3/themes/theme-devbox-sante.puml

node &amp;quot;Poste Client (Windows/Mac/Linux)&amp;quot; {
    [FrontEnd intégrateur] as frontend

    package &amp;quot;DevBox-Santé Proxy REST&amp;quot;  DEVBOX_COLOR {
        component &amp;quot;DevBox-sante DMP&amp;quot; as dmpFacade #35D9C0 {
            [DevBox-sante CPS] as cps #D34A3C

        }
    }
    [Cryptolib CPS (ANS)] as cryptolibCPS
}
[BackEnd intégrateur] as backend
cloud &amp;quot;**DMP**&amp;quot; as DMP

frontend -right-&amp;gt; dmpFacade : REST
cps &amp;lt;-up-&amp;gt; cryptolibCPS : appel natif
dmpFacade -down-&amp;gt; DMP : SOAP
frontend  -down-&amp;gt; backend
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;version-embedded&#34;&gt;Version Embedded&lt;/h4&gt;
&lt;h5 id=&#34;diagramme-de-composants-1&#34;&gt;Diagramme de composants&lt;/h5&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-plantuml&#34; data-lang=&#34;plantuml&#34;&gt;!include https://bitbucket.org/devbox-sante/plantuml/raw/3/themes/theme-devbox-sante.puml

node &amp;quot;Poste Client (Windows/Mac/Linux)&amp;quot; {
    component &amp;quot;Client de l&#39;intégrateur&amp;quot; {
        component &amp;quot;DevBox-Santé Proxy REST&amp;quot;  DEVBOX_COLOR {
            component &amp;quot;DevBox-sante DMP&amp;quot; as dmpFacade #35D9C0 {
                [DevBox-sante CPS] as cps #D34A3C

            }
        }
    }
    [Cryptolib CPS (ANS)] as cryptolibCPS
}
cloud &amp;quot;**DMP**&amp;quot; as DMP

cps &amp;lt;--&amp;gt; cryptolibCPS : appel natif
dmpFacade --&amp;gt; DMP : SOAP
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Authentification Directe via le CPS Agent</title>
      <link>/docs/dmp/authentifications/cps_agent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/dmp/authentifications/cps_agent/</guid>
      <description>
        
        
        &lt;h2 id=&#34;authentification-directe-avec-cpsagent&#34;&gt;Authentification Directe avec CPS Agent&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Scenario possible&lt;/strong&gt; : Le frontend de l&amp;rsquo;intégrateur, passe le contexte d&amp;rsquo;authentification de la DevBox-Santé CPS agent se trouvant sur le poste client au backend. Le backend initie une session TLS/SSL avec le serveur DMP grâce au CpsAgentClient.&lt;/p&gt;
&lt;h4 id=&#34;diagramme-de-composants&#34;&gt;Diagramme de composants&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-plantuml&#34; data-lang=&#34;plantuml&#34;&gt;!include https://bitbucket.org/devbox-sante/plantuml/raw/3/themes/theme-devbox-sante.puml

node &amp;quot;Poste Client (Windows/Mac/Linux)&amp;quot; {
    [FrontEnd intégrateur] as frontend

    package &amp;quot;DevBox-Santé Proxy REST&amp;quot; as cpsAgent DEVBOX_COLOR {
            [DevBox-sante CPS] as cps CPS_COLOR

    }
    [Cryptolib CPS (ANS)] as cryptolibCPS
}

node &amp;quot;Environnement intégrateur&amp;quot; {
   [BackEnd intégrateur] as backend
    package &amp;quot;DevBox-Santé Proxy REST&amp;quot; DEVBOX_COLOR {
        component &amp;quot;DevBox-sante DMP&amp;quot; as dmpFacade DMP_COLOR {
            [CpsAgentClient] CPS_COLOR
        }
    }
}
cloud &amp;quot;**DMP**&amp;quot; as DMP

frontend -d-&amp;gt; backend : 1
backend -d-&amp;gt; dmpFacade  : 2
CpsAgentClient -&amp;gt; cpsAgent : 3
cps -down-&amp;gt; cryptolibCPS : 4
dmpFacade -down-&amp;gt; DMP : 5
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;diagramme-de-séquences&#34;&gt;Diagramme de séquences&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-plantuml&#34; data-lang=&#34;plantuml&#34;&gt;!include https://bitbucket.org/devbox-sante/plantuml/raw/3/themes/theme-devbox-sante.puml

box &amp;quot;Poste Client&amp;quot;
participant frontend
participant cpsAgent CPS_COLOR
end box

box &amp;quot;Environnement intégrateur&amp;quot; #white
participant &amp;quot;DevBox-Santé DMP&amp;quot; as dbxdmp DMP_COLOR
participant backend
end box

participant &amp;quot;**DMP**&amp;quot; as dmp

frontend -&amp;gt; backend : storeDocumentPatient
backend -&amp;gt; dbxdmp : /dmp/td21SubmitDocuments
==  initialisation d&#39;une connexion SSL en authentification mutuelle avec le DMP ==
dbxdmp -&amp;gt; &amp;quot;DMP&amp;quot; as dmp : [SSL] 1. Client Hello
dmp -&amp;gt; dbxdmp : [SSL] 2. Server Hello (certificat du DMP server inclus)
dmp -&amp;gt; dbxdmp : [SSL] 3. Client certificate request
dbxdmp -&amp;gt; cpsAgent : HTTP GET /cps/authenticationCertificate
cpsAgent -&amp;gt; dbxdmp : {certificate authentification}
dbxdmp -&amp;gt; dmp : [SSL] 4. Client certificate
dbxdmp -&amp;gt; dmp : [SSL] 5. Client sends key info \n(encrypted with DMP server public&#39;s key)
dbxdmp -&amp;gt; cpsAgent : HTTP POST /cps/sign/for/authentication/SHA256WithRSA body : {handshake data}
cpsAgent -&amp;gt; dbxdmp : {signed handshake data}
dbxdmp -&amp;gt; dmp : [SSL] 6. Certificate verify \n (with Digital Signature)
dbxdmp -&amp;gt; dmp : [SSL] 7. Finnished message \n (encrypted with symmetric key)
dmp -&amp;gt; dbxdmp : [SSL] 8. Finnished message \n (encrypted with symmetric key)
== fin de l&#39;initialisation de la connexion ssl avec le DMP ==
dbxdmp -&amp;gt; dmp : POST SOAP message de soumission (XDS/CDA)
dmp -&amp;gt; dbxdmp : SOAP response OK
dbxdmp -&amp;gt; backend : HTTP 200 Ok
backend -&amp;gt; frontend : ok

&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
  </channel>
</rss>
